2.	(KEYWORD, int) (ID, count) (SYMBOL, ;)
3.	(KEYWORD, int) (ID, result) (SYMBOL, [) (NUM, 50) (SYMBOL, ]) (SYMBOL, ;)
5.	(KEYWORD, int) (ID, abs) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {)
6.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
7.	(KEYWORD, return) (SYMBOL, () (NUM, 0) (SYMBOL, -) (ID, a) (SYMBOL, )) (SYMBOL, ;)
8.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
9.	(KEYWORD, return) (ID, a) (SYMBOL, ;)
10.	(SYMBOL, })
11.	(SYMBOL, })
13.	(KEYWORD, int) (ID, isMultiplier) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, ,) (KEYWORD, int) (ID, b) (SYMBOL, )) (SYMBOL, {)
14.	(KEYWORD, int) (ID, i) (SYMBOL, ;)
15.	(KEYWORD, int) (ID, step) (SYMBOL, ;)
16.	(KEYWORD, int) (ID, flag) (SYMBOL, ;)
18.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
19.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;)
20.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
21.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
22.	(ID, flag) (SYMBOL, =) (NUM, 0) (SYMBOL, ;)
23.	(SYMBOL, })
25.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
26.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
27.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
28.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
29.	(ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
30.	(SYMBOL, })
31.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
32.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
33.	(ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
34.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
35.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
36.	(SYMBOL, })
37.	(SYMBOL, })
38.	(ID, step) (SYMBOL, =) (ID, i) (SYMBOL, ;)
39.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, -) (ID, abs) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;)
40.	(KEYWORD, while) (SYMBOL, () (ID, abs) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, <) (ID, abs) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, +) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
41.	(KEYWORD, if) (SYMBOL, () (ID, i) (SYMBOL, *) (ID, b) (SYMBOL, ==) (ID, a) (SYMBOL, )) (SYMBOL, {)
42.	(ID, flag) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
43.	(KEYWORD, break) (SYMBOL, ;)
44.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
45.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (ID, step) (SYMBOL, ;)
46.	(SYMBOL, })
47.	(SYMBOL, })
48.	(KEYWORD, return) (ID, flag) (SYMBOL, ;)
50.	(SYMBOL, })
52.	(KEYWORD, int) (ID, integerDivision) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, ,) (KEYWORD, int) (ID, b) (SYMBOL, )) (SYMBOL, {)
53.	(KEYWORD, int) (ID, i) (SYMBOL, ;)
54.	(KEYWORD, int) (ID, step) (SYMBOL, ;)
55.	(KEYWORD, int) (ID, flag) (SYMBOL, ;)
57.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
58.	(KEYWORD, return) (NUM, 123456789) (SYMBOL, ;)
59.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
60.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
61.	(ID, flag) (SYMBOL, =) (NUM, 0) (SYMBOL, ;)
62.	(SYMBOL, })
64.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
65.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
66.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
67.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, *) (SYMBOL, () (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;)
68.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, *) (SYMBOL, () (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;)
69.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
70.	(ID, i) (SYMBOL, =) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
71.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, *) (SYMBOL, () (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;)
72.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, *) (SYMBOL, () (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;)
73.	(SYMBOL, })
74.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
75.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
76.	(ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
77.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
78.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
79.	(SYMBOL, })
80.	(SYMBOL, })
81.	(ID, step) (SYMBOL, =) (ID, i) (SYMBOL, ;)
82.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, -) (ID, abs) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;)
84.	(KEYWORD, while) (SYMBOL, () (ID, abs) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, <) (ID, abs) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, +) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
85.	(KEYWORD, if) (SYMBOL, () (ID, i) (SYMBOL, *) (ID, b) (SYMBOL, ==) (ID, a) (SYMBOL, )) (SYMBOL, {)
86.	(KEYWORD, return) (ID, i) (SYMBOL, ;)
87.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
88.	(KEYWORD, int) (ID, f1) (SYMBOL, ;)
89.	(KEYWORD, int) (ID, f2) (SYMBOL, ;)
90.	(ID, f1) (SYMBOL, =) (ID, i) (SYMBOL, *) (ID, b) (SYMBOL, <) (ID, a) (SYMBOL, ;)
91.	(ID, f2) (SYMBOL, =) (ID, a) (SYMBOL, <) (SYMBOL, () (ID, i) (SYMBOL, +) (ID, step) (SYMBOL, )) (SYMBOL, *) (ID, b) (SYMBOL, ;)
92.	(KEYWORD, if) (SYMBOL, () (ID, f1) (SYMBOL, ==) (ID, f2) (SYMBOL, )) (SYMBOL, {)
93.	(KEYWORD, return) (SYMBOL, () (ID, i) (SYMBOL, +) (SYMBOL, () (ID, b) (SYMBOL, ==) (ID, abs) (SYMBOL, () (ID, b) (SYMBOL, )) (SYMBOL, )) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;)
94.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
95.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (ID, step) (SYMBOL, ;)
96.	(SYMBOL, })
98.	(SYMBOL, })
99.	(SYMBOL, })
100.	(KEYWORD, return) (NUM, 123456789) (SYMBOL, ;)
101.	(SYMBOL, })
103.	(KEYWORD, int) (ID, isPrime) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {)
104.	(KEYWORD, int) (ID, i) (SYMBOL, ;)
105.	(KEYWORD, int) (ID, halfa) (SYMBOL, ;)
106.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
107.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;)
108.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
109.	(ID, i) (SYMBOL, =) (NUM, 2) (SYMBOL, ;)
110.	(ID, halfa) (SYMBOL, =) (ID, integerDivision) (SYMBOL, () (ID, a) (SYMBOL, ,) (NUM, 2) (SYMBOL, )) (SYMBOL, ;)
111.	(KEYWORD, while) (SYMBOL, () (ID, i) (SYMBOL, <) (ID, halfa) (SYMBOL, +) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
112.	(KEYWORD, if) (SYMBOL, () (ID, isMultiplier) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, )) (SYMBOL, {)
113.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;)
114.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
115.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
116.	(SYMBOL, })
117.	(SYMBOL, })
118.	(KEYWORD, return) (NUM, 1) (SYMBOL, ;)
119.	(SYMBOL, })
122.	(SYMBOL, })
124.	(KEYWORD, void) (ID, printPrimeNumbersLessThan) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {)
125.	(KEYWORD, int) (ID, i) (SYMBOL, ;)
126.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
127.	(KEYWORD, while) (SYMBOL, () (ID, i) (SYMBOL, <) (ID, a) (SYMBOL, )) (SYMBOL, {)
128.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
129.	(KEYWORD, if) (SYMBOL, () (ID, isPrime) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, )) (SYMBOL, {)
130.	(ID, output) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;)
131.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
133.	(SYMBOL, })
134.	(SYMBOL, })
136.	(SYMBOL, })
140.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
141.	(KEYWORD, int) (ID, a) (SYMBOL, ;)
142.	(ID, printPrimeNumbersLessThan) (SYMBOL, () (NUM, 20) (SYMBOL, )) (SYMBOL, ;)
143.	(SYMBOL, })
